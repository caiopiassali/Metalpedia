<?php
/**
 * Created by PhpStorm.
 * User: caiop
 * Date: 15/11/2018
 * Time: 14:26
 */

namespace app\dao;

use app\model\AlbumModel;
use core\dao\Dao;

final class AlbumDao extends Dao
{

    const COL_ID = 'id_album';
    const COL_ALBUM = 'name_album';
    const COL_DATE = 'release_date';
    const COL_COVER = 'cover_album';
    const COL_TYPE = 'album_type';
    const COL_BAND = 'id_band';

    /**
     * AlbumDao constructor.
     */
    public function __construct(AlbumModel $model = null)
    {
        $this->model = is_null($model) ? new AlbumModel() : $model;
        $this->tableName = 'album';
        $this->tableId = self::COL_ID;
        $this->setColumns();
    }


    /**
     * Este mÃ©todo deve criar um array cujo as chaves devem ser os nomes da tabela e os valores devem vir do respectivo model.
     */
    protected function setColumns()
    {
        if ($this->model->getId() == null) {
            $this->columns = array(
                self::COL_ALBUM => $this->model->getNameAlbum(),
                self::COL_DATE => $this->model->getReleaseDate(),
                self::COL_COVER => $this->model->getCoverAlbum(),
                self::COL_TYPE => $this->model->getAlbumType(),
                self::COL_BAND => $this->model->getBand()->getId()
            );
        } else {
            $this->columns = array(
                self::COL_ALBUM => $this->model->getNameAlbum(),
                self::COL_DATE => $this->model->getReleaseDate(),
                self::COL_TYPE => $this->model->getAlbumType(),
                self::COL_BAND => $this->model->getBand()->getId()
            );
        }
    }

    public function findById($id)
    {
        $data = parent::findById($id); // TODO: Change the autogenerated stub
        if ($data) {
            return new AlbumModel(
                $data[self::COL_ID],
                $data[self::COL_ALBUM],
                $data[self::COL_DATE],
                $data[self::COL_COVER],
                $data[self::COL_TYPE],
                (new BandDao())->findById($data[self::COL_BAND])
            );
        } else {
            return null;
        }
    }

    public function selectAll($criteria = null, $orderBy = null,
                              $groupBy = null, $limit = null, $offSet = null)
    {
        try {
            $data = parent::selectAll($criteria, $orderBy, $groupBy, $limit, $offSet); // TODO: Change the autogenerated stub
            if ($data) {
                $list = new \ArrayObject();
                foreach ($data as $album) {
                    $list->append(new AlbumModel(
                        $album[self::COL_ID],
                        $album[self::COL_ALBUM],
                        $album[self::COL_DATE],
                        $album[self::COL_COVER],
                        $album[self::COL_TYPE],
                        (new BandDao())->findById($album[self::COL_BAND])
                    ));
                }
                return $list;
            } else {
                return new \ArrayObject();
            }
        } catch (\Exception $ex) {
            throw $ex;
        }
    }

    public function selectLength($id) {
        try {
            //..cria o objeto para interagir com o BD
            $sqlObj = new \core\dao\SqlObject(\core\dao\Connection::getConnection());
            $dados = $sqlObj->select('song', 'to_char(sum(length_song),\'HH24:MI:SS\')', SongDao::COL_ALBUM . " = {$id}");
            return $dados[0]['to_char'];
        } catch (\Exception $ex) {
            throw $ex;
        }
    }

}