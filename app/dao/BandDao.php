<?php
/**
 * Created by PhpStorm.
 * User: caiop
 * Date: 22/10/2018
 * Time: 23:11
 */

namespace app\dao;

use app\model\BandModel;
use core\dao\Dao;

final class BandDao extends Dao
{

    const COL_ID = 'id_band';
    const COL_BAND = 'name_band';
    const COL_BIO = 'bio_band';
    const COL_LOGO = 'logo_band';
    const COL_PHOTO = 'photo_band';
    const COL_COUNTRY = 'id_country';
    const COL_GENRE = 'id_genre';

    /**
     * BandDao constructor.
     */
    public function __construct(BandModel $model = null)
    {
        $this->model = is_null($model) ? new BandModel() : $model;
        //$this->tableName = 'band inner join genre g on band.id_genre = g.id_genre inner join country c on band.id_country = c.id_country';
        $this->tableName = 'band';
        $this->tableId = self::COL_ID;
        $this->setColumns();
    }

    /**
     * Este mÃ©todo deve criar um array cujo as chaves devem ser os nomes da tabela e os valores devem vir do respectivo model.
     */
    protected function setColumns()
    {
        if ($this->model->getId() == null) {
            $this->columns = array(
                self::COL_BAND => $this->model->getNameBand(),
                self::COL_BIO => $this->model->getBioBand(),
                self::COL_LOGO => $this->model->getLogoBand(),
                self::COL_PHOTO => $this->model->getPhotoBand(),
                self::COL_COUNTRY => $this->model->getCountry()->getId(),
                self::COL_GENRE => $this->model->getGenre()->getId()
            );
        } else {
            $this->columns = array(
                self::COL_BAND => $this->model->getNameBand(),
                self::COL_BIO => $this->model->getBioBand(),
                self::COL_COUNTRY => $this->model->getCountry()->getId(),
                self::COL_GENRE => $this->model->getGenre()->getId()
            );
        }
    }

    public function findById($id)
    {
        $data = parent::findById($id); // TODO: Change the autogenerated stub
        if ($data) {
            return new BandModel(
                $data[self::COL_ID],
                $data[self::COL_BAND],
                $data[self::COL_BIO],
                $data[self::COL_LOGO],
                $data[self::COL_PHOTO],
                (new CountryDao())->findById($data[self::COL_COUNTRY]),
                (new GenreDao())->findById($data[self::COL_GENRE])
            );
        } else {
            return null;
        }
    }

    public function selectAll($criteria = null, $orderBy = null,
                              $groupBy = null, $limit = null, $offSet = null)
    {
        try {
            $data = parent::selectAll($criteria, $orderBy, $groupBy, $limit, $offSet); // TODO: Change the autogenerated stub
            if ($data) {
                $list = new \ArrayObject();
                foreach ($data as $band) {
                    $list->append(new BandModel(
                        $band[self::COL_ID],
                        $band[self::COL_BAND],
                        $band[self::COL_BIO],
                        $band[self::COL_LOGO],
                        $band[self::COL_PHOTO],
                        (new CountryDao())->findById($band[self::COL_COUNTRY]),
                        (new GenreDao())->findById($band[self::COL_GENRE])
                    ));
                }
                return $list;
            } else {
                return new \ArrayObject();
            }
        } catch (\Exception $ex) {
            throw $ex;
        }
    }

    public function selectAllAsJson($criteria = null, $orderBy = null, $groupBy = null, $limit = null, $offSet = null)
    {
        try {
            $data = parent::selectAll($criteria, $orderBy, $groupBy, $limit, $offSet);
            if ($data) {
                $list = new \ArrayObject();
                foreach ($data as $band) {
                    $country = (new CountryDao())->findById($band[self::COL_COUNTRY]);
                    $genre = (new GenreDao())->findById($band[self::COL_GENRE]);
                    $arr_country = array(
                        CountryDao::COL_ID => $country->getId(),
                        CountryDao::COL_COUNTRY => $country->getNameCountry()
                    );
                    $arr_genre = array(
                        GenreDao::COL_ID => $genre->getId(),
                        GenreDao::COL_GENRE => $genre->getNameGenre()
                    );
                    $list->append(array(
                        self::COL_ID => $band[self::COL_ID],
                        self::COL_BAND => $band[self::COL_BAND],
                        'country'=> $arr_country,
                        'genre' => $arr_genre
                    ));
                }
                return json_encode($list);
            } else
                return json_encode(array('status'=>'error'));
        } catch (\Exception $ex) {
            throw $ex;
        }
    }

}