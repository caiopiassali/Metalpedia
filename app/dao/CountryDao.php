<?php
/**
 * Created by PhpStorm.
 * User: caiop
 * Date: 20/10/2018
 * Time: 15:22
 */

namespace app\dao;

use core\dao\Dao;
use app\model\CountryModel;

final class CountryDao extends Dao {

    const COL_ID = 'id_country';
    const COL_COUNTRY = 'name_country';
    const COL_ISO = 'iso_country';
    const COL_ISO3 = 'iso3_country';
    const COL_FLAG = 'flag_country';

    /**
     * CountryDao constructor.
     */
    public function __construct(CountryModel $model = null)
    {
        $this->model = is_null($model) ? new CountryModel() : $model;
        $this->tableName = 'country';
        $this->tableId = self::COL_ID;
        $this->setColumns();
    }

    /**
     * Este mÃ©todo deve criar um array cujo as chaves devem ser os nomes da tabela e os valores devem vir do respectivo model.
     */
    protected function setColumns()
    {
        $this->columns = array(

            self::COL_COUNTRY => $this->model->getNameCountry(),
            self::COL_ISO => $this->model->getIsoCountry(),
            self::COL_ISO3 => $this->model->getIso3Country(),
            self::COL_FLAG => $this->model->getFlagCountry()
        );
    }

    /*public function insertUpdate($returnId = null)
    {
        //if ($this->model->getId()) {
            $this->model->setId('\'' . $this->model->getId() . '\'');
        //}
        parent::insertUpdate($returnId); // TODO: Change the autogenerated stub
    }*/

    public function findById($id)
    {
        $data = parent::findById($id);
        if ($data) {
            return new CountryModel(
                $id,
                $data[self::COL_COUNTRY],
                $data[self::COL_ISO],
                $data[self::COL_ISO3],
                $data[self::COL_FLAG]
            );
        }
        else {
            return null;
        }
    }

    public function selectAll($criteria = null, $orderBy = null, $groupBy = null, $limit = null, $offSet = null)
    {
        try {
            $data = parent::selectAll($criteria, $orderBy, $groupBy, $limit, $offSet);
            if ($data) {
                $list = new \ArrayObject();
                foreach ($data as $country) {
                    $list->append(new CountryModel(
                        $country[$this->tableId],
                        $country[self::COL_COUNTRY],
                        $country[self::COL_ISO],
                        $country[self::COL_ISO3],
                        $country[self::COL_FLAG]
                    ));
                }
                return $list;
            } else
                return new \ArrayObject();
        } catch (\Exception $ex) {
            throw $ex;
        }
    }

    public function selectAllAsJson($criteria = null, $orderBy = null, $groupBy = null, $limit = null, $offSet = null)
    {
        try {
            $data = parent::selectAll($criteria, $orderBy, $groupBy, $limit, $offSet);
            if ($data) {
                return json_encode($data);
            } else
                return json_encode(array('status'=>'error'));
        } catch (\Exception $ex) {
            throw $ex;
        }
    }
}