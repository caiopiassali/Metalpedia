<?php
/**
 * Created by PhpStorm.
 * User: caiop
 * Date: 20/11/2018
 * Time: 16:36
 */

namespace app\dao;

use core\dao\Dao;
use app\model\SongModel;

final class SongDao extends Dao
{

    const COL_ID = 'id_song';
    const COL_SONG = 'name_song';
    const COL_NUMBER = 'number_song';
    const COL_LENGTH = 'length_song';
    const COL_LYRICS = 'lyrics_song';
    const COL_ALBUM = 'id_album';

    public function __construct(SongModel $model = null)
    {
        $this->model = is_null($model) ? new SongModel() : $model;
        $this->tableName = 'song';
        $this->tableId = self::COL_ID;
        $this->setColumns();
    }

    /**
     * Este mÃ©todo deve criar um array cujo as chaves devem ser os nomes da tabela e os valores devem vir do respectivo model.
     */
    protected function setColumns()
    {
        // TODO: Implement setColumns() method.
        $this->columns = array(
            self::COL_SONG => $this->model->getNameSong(),
            self::COL_NUMBER => $this->model->getNumberSong(),
            self::COL_LENGTH => $this->model->getLengthSong(),
            self::COL_LYRICS => $this->model->getLyricsSong(),
            self::COL_ALBUM => $this->model->getAlbum()->getId()
        );
    }

    public function findById($id)
    {
        $data = parent::findById($id); // TODO: Change the autogenerated stub
        if ($data) {
            return new SongModel(
                $data[self::COL_ID],
                $data[self::COL_SONG],
                $data[self::COL_NUMBER],
                $data[self::COL_LENGTH],
                $data[self::COL_LYRICS],
                (new AlbumDao())->findById($data[self::COL_ALBUM])
            );
        } else {
            return null;
        }
    }

    public function selectAll($criteria = null, $orderBy = null,
                              $groupBy = null, $limit = null, $offSet = null)
    {
        try {
            $data = parent::selectAll($criteria, $orderBy, $groupBy, $limit, $offSet); // TODO: Change the autogenerated stub
            if ($data) {
                $list = new \ArrayObject();
                foreach ($data as $song) {
                    $list->append(new SongModel(
                        $song[self::COL_ID],
                        $song[self::COL_SONG],
                        $song[self::COL_NUMBER],
                        $song[self::COL_LENGTH],
                        $song[self::COL_LYRICS],
                        (new AlbumDao())->findById($song[self::COL_ALBUM])
                    ));
                }
                return $list;
            } else {
                return new \ArrayObject();
            }
        } catch (\Exception $ex) {
            throw $ex;
        }
    }

}