<?php
/**
 * Created by PhpStorm.
 * User: caiop
 * Date: 26/10/2018
 * Time: 22:52
 */

namespace app\controller;

use app\dao\AlbumDao;
use core\mvc\Controller;
use app\model\BandModel;
use app\dao\BandDao;
use app\view\band\BandView;
use app\view\band\BandList;
use app\view\band\BandInfo;
use app\model\CountryModel;
use app\model\GenreModel;
use app\dao\CountryDao;
use app\dao\GenreDao;
use app\model\AlbumTypeEnum;
use core\util\SimpleImage;
use core\util\Strings;
use core\mvc\view\Message;

final class BandCtr extends Controller
{

    public function __construct()
    {
        parent::__construct();
        $this->model = new BandModel();
        $this->dao = new BandDao();
        $this->view = new BandView();
        $this->viewList = new BandList();
        $this->viewInfo = new BandInfo();
    }

    /**
     * Pega os dados da model e alimenta a View - abstrato, pois serÃ¡ implementados nos herdeiros.
     */
    public function viewToModel()
    {

        $this->model = new BandModel(
            $this->post['id'],
            $this->post['name_band'],
            Strings::formatInput($this->post['bio_band']),
            $this->model->getLogoBand(),
            $this->model->getPhotoBand(),
            new CountryModel($this->post['id_country']),
            new GenreModel($this->post['id_genre'])
        );
    }

    public function showView()
    {
        $countries = (new CountryDao())->selectAll(null, CountryDao::COL_ID);
        $this->view->setCountries($countries);
        $genres = (new GenreDao())->selectAll(null, GenreDao::COL_GENRE);
        $this->view->setGenres($genres);
        parent::showView(); // TODO: Change the autogenerated stub
    }

    public function showInfo()
    {
        $album_types = (AlbumTypeEnum::getConstants());
        $this->viewInfo->setAlbumTypes($album_types);
        $albums = (new AlbumDao())->selectAll(
            AlbumDao::COL_BAND . " = {$this->get['id']}",
            AlbumDao::COL_DATE . ' DESC, ' . AlbumDao::COL_ALBUM . ', ' . AlbumDao::COL_ID  . ' DESC'
        );
        $this->viewInfo->setAlbums($albums);
        parent::showInfo(); // TODO: Change the autogenerated stub
    }

    public function showList()
    {
        $countries = (new CountryDao())->selectAll(null, CountryDao::COL_ID);
        $this->viewList->setCountries($countries);

        if($this->post){
            $this->criteria = "1 = 1";
            if (isset($this->post['data'][2]) && $this->post['data'][2]) {
                $this->criteria .= " and upper (" . BandDao::COL_BAND . ") like upper('%{$this->post['data'][2]}%')";
            }
            if (isset($this->post['data'][0]) && $this->post['data'][0]) {
                $this->criteria .= " and " . BandDao::COL_COUNTRY . "= '{$this->post['data'][0]}'";
            }
            if (isset($this->post['data'][1]) && $this->post['data'][1]) {
                $this->criteria .= " and " . BandDao::COL_GENRE . "= '{$this->post['data'][1]}'";
            }
        }

        if (isset($this->post['orderBy'])) {
            $this->orderBy = $this->post['orderBy'];
        } else {
            $this->orderBy = BandDao::COL_BAND . ', ' . BandDao::COL_ID;
        }

        //$this->orderBy = BandDao::COL_BAND . ', ' . BandDao::COL_ID;
        parent::showList(); // TODO: Change the autogenerated stub
    }

    public function run()
    {
        try {
            $logo = isset($_FILES['logo_band']) ? $_FILES['logo_band'] : null;
            $photo = isset($_FILES['photo_band']) ? $_FILES['photo_band'] : null;

            if (is_null($this->model->getId())) {
                if (!is_null($logo)) {
                    $logofile = new SimpleImage();
                    $logofile->load($logo['tmp_name']);
                    $logofile->save('core/img/logos/' . time() . $logofile->getExtension());
                    $this->model->setLogoBand(time() . $logofile->getExtension());
                }

                if (!is_null($photo)) {
                    $photofile = new SimpleImage();
                    $photofile->load($photo['tmp_name']);
                    $photofile->save('core/img/photos/' . time() . $photofile->getExtension());
                    $this->model->setPhotoBand(time() . $photofile->getExtension());
                }
            }

            parent::run();
        } catch (\Exception $ex) {
            $msg = new Message(
                Application::MSG_TITLE_DEFAULT,
                Application::MSG_ERROR,
                Application::ICON_ERROR
            );
            $msg->show();
        }

        //parent::run(); // TODO: Change the autogenerated stub
    }

    public function getBands() {
        if (isset($this->get['name_band'])) {
            $name_band = $this->get['name_band'];
            $criteria = "upper (" . BandDao::COL_BAND . ") like upper('%{$name_band}%')";
            $bands = (new BandDao())->selectAllAsJson($criteria, BandDao::COL_BAND . ', ' . BandDao::COL_ID);
            echo $bands;
        }
    }
}